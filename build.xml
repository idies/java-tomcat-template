<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="java-tomcat-template" default="all" basedir=".">

  <property name="app.name"           value="java-tomcat-template"/>
  <property name="conf.home"          value="${basedir}/conf"/> 
  <property name="build.home"         value="${basedir}/build"/>
  <property name="dist.home"          value="${basedir}/dist"/>
  <property name="docs.home"          value="${basedir}/docs"/>
  <property name="src.home"           value="${basedir}/src"/>
  <property name="local.lib.home"     value="${basedir}/lib.local"/>
  <property name="catalina.lib.home"  value="${basedir}/lib.catalina"/>
  <property name="web.home"           value="${basedir}/WebContent"/>
  <property name="lib.home"           value="${web.home}/WEB-INF/lib"/>

  <property file="${conf.home}/build.properties"/>
  <property file="${conf.home}/application.properties"/>  


<!-- ==================== Catalina Classpath =============================== -->

  <path id="catalina.classpath">
    <fileset dir="${catalina.lib.home}">
      <include name="*.jar"/>
    </fileset>
  </path>


<!-- ==================== Compilation Classpath ============================ -->

  <path id="compile.classpath">
    <fileset dir="${lib.home}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${local.lib.home}">
      <include name="*.jar"/>
    </fileset>
  </path>


<!-- ==================== Ivy Install ====================================== -->

  <property name="ivy.install.version" value="2.4.0"/>
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME"/>
  </condition>

  <property name="ivy.home"     value="${user.home}/.ant"/>
  <property name="ivy.jar.dir"  value="${ivy.home}/lib"/>
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}" />
    <!-- download Ivy from web site so that it can be used even without any 
      special installation -->
    <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>

  <target name="init-ivy" depends="download-ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already 
      dropped it into ant's lib dir (note that the latter copy will always take 
      precedence). We will not fail as long as local lib dir exists (it may be 
      empty) and ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>


<!-- ==================== Resolve Catalina ================================= -->

	<target name="resolve-catalina" depends="init-ivy" description="Retrieve Catalina dependencies">
    <ivy:retrieve conf="catalina" pattern="${catalina.lib.home}/[artifact](-[classifier]).[ext]"/>

    <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask">
      <classpath refid="catalina.classpath"/>
    </taskdef>
    <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask">
      <classpath refid="catalina.classpath"/>
    </taskdef>
    <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask">
      <classpath refid="catalina.classpath"/>
    </taskdef>
  </target>


<!-- ==================== Compilation Options ============================== -->

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>

<!-- ==================== Compilation Classpath ============================ -->

  <path id="compile.classpath">
    <fileset dir="${lib.home}">
      <include name="*.jar"/>
    </fileset>
  	<!-- in resolve, copy to lib.home -->
  	<!--
    <fileset dir="${local.lib.home}">
      <include name="*.jar"/>
    </fileset>
    -->
  </path>

<!-- ==================== All ============================================== -->

  <target name="all" depends="clean,dist" description="Clean build and dist directories, then rebuild"/>


<!-- ==================== Clean ============================================ -->

  <target name="clean" description="Clean build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>


<!-- ==================== Compile ========================================== -->

  <target name="compile" description="Compile Java sources">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/WEB-INF"/>
    <mkdir dir="${build.home}/WEB-INF/classes"/>

    <!-- Copy static content of this web application -->
    <copy todir="${build.home}">
      <fileset dir="${web.home}">
        <!-- <exclude name="WEB-INF/**/*"/> -->
      </fileset>
    </copy>
 
    <!-- Process and copy web.xml -->
  	<macrodef name="mcopy">
  	  <attribute name="todir"/>
  	  <sequential>
  	    <copy todir="@{todir}" file="${basedir}/web.xml" overwrite="true">
  	      <filterchain>
  	        <replacetokens>
  	          <token key="foo_bar" value="${foo.bar}"/>
  	        </replacetokens>
  	      </filterchain>
  	    </copy>
  	  </sequential>
  	</macrodef>

  	<mcopy todir="${web.home}/WEB-INF"/>
  	<mcopy todir="${build.home}/WEB-INF"/>
  	
  	<!--
    <copy todir="${web.home}/WEB-INF" file="${basedir}/web.xml">
      <filterchain>
        <replacetokens>
          <token key="foo_bar" value="${foo.bar}"/>
        </replacetokens>
      </filterchain>
    </copy>
    -->
  	
    <!-- Compile Java classes as necessary -->
    <javac  srcdir="${src.home}"
            destdir="${build.home}/WEB-INF/classes"
            debug="${compile.debug}"
            deprecation="${compile.deprecation}"
            includeantruntime="false"
            optimize="${compile.optimize}">
      <classpath refid="compile.classpath"/>
      <classpath refid="catalina.classpath"/>
    </javac>

    <!-- Copy application resources -->
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>

    <copy  todir="${build.home}/WEB-INF/lib">
      <path refid="compile.classpath"/>
    </copy>
  </target>


<!-- ==================== Try ============================================== -->

  <target name="try" depends="dist,undeploy,deploy" description="Build and redeploy">
  </target>


<!-- ==================== Resolve ========================================== -->

  <target name="resolve" depends="init-ivy" description="Resolve dependencies">
    <ivy:retrieve conf="compile" pattern="${lib.home}/[artifact]-[revision].[ext]"/>
    <copy todir="${lib.home}">
      <fileset dir="${local.lib.home}"/>
    </copy>
 
  </target>


<!-- ==================== Dist ============================================= -->

  <target name="dist" depends="resolve-catalina,resolve,compile" description="Create war file">
    <mkdir dir="${dist.home}"/>
    <war jarfile="${dist.home}/${app.name}.war" basedir="${build.home}">
      <metainf dir=".">
         <include name="NOTICE"/>
         <include name="LICENSE"/>
      </metainf>
    </war>
  </target>

<!-- ==================== Undeploy ========================================= -->

  <target name="undeploy" depends="resolve-catalina" description="Undeploy application from a remote servlet container">
    <undeploy url="${manager.url}"
              username="${manager.username}"
              password="${manager.password}"
              path="${app.path}" />
  </target>


<!-- ==================== Deploy =========================================== -->

  <target name="deploy" depends="resolve-catalina,dist" description="Deploy application to a remote servlet container">
    <tstamp />
    <deploy url="${manager.url}"
            username="${manager.username}"
            password="${manager.password}"
            path="${app.path}"
            war="/${dist.home}/${app.name}.war" />
  </target>


<!-- ==================== Javadoc ========================================== -->

  <target name="javadoc" depends="compile" description="Create Javadoc API documentation">
    <mkdir dir="${docs.home}/api" />
    <javadoc sourcepath="${src.home}"
             destdir="${docs.home}/api"
             packagenames="*">
      <classpath refid="compile.classpath" />
      <classpath refid="catalina.classpath" />
    </javadoc>
  </target>


<!-- ==================== Reload =========================================== -->

  <target name="reload" description="Reload application on a remote servlet container">
    <reload url="${manager.url}"
            username="${manager.username}"
            password="${manager.password}"
            path="${app.path}" />
  </target>

</project>
